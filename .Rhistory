curve(vs,from=1e-2,to=10,type="l")
curve(Q,from=0,to=1,type="l")
L = 5
parameters = c(A=100,
L=5,
C1=1e-2,
C2=0.5,
C3=2,
C4=3,
v0=1,
rp=1,
rh=0.1
)
states=c(l1=1, l2=1, l3=1, l4=1, C5=5
)
times=seq(0,10,by=1/60)
out = as.data.frame(
ode(y=states,
times=times,
func=clarifier_ode,
parms=parameters
))
out = out %>% mutate(L = l1+l2+l3+l4)
out
ggplot() +
geom_line(aes(x=out$time,y=out$l1,color="l1")) +
geom_line(aes(x=out$time,y=out$l2,color="l2")) +
geom_line(aes(x=out$time,y=out$l3,color="l3")) +
geom_line(aes(x=out$time,y=out$l4,color="l4")) +
geom_line(aes(x=out$time,y=L-out$l1-out$l2-out$l3-out$l4,color="l5")) +
mytheme
# summary(df)
out
?data
data
data("nhtemp")
nhtemp
str(nhtemp)
plot(nhtemp)
as.data.frame(nhtemp)
as.data.frame(nhtemp) %>% head
as.matrix(nhtemp) %>% head
as.data.frame(nhtemp) %>% head
as.data.frame(nhtemp) %>% mutate(t=1:length(nhtemp)) %>% head
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
.data = as.data.frame(nhtemp) %>% mutate(t=1:length(nhtemp))
.data
head(.data)
tvec = seq(0,100,by=1)
tvec = seq(0,100,by=1)
df = rnorm(100,mean=0,sd=diff(tvec))
df
tvec = seq(0,100,by=1)
df = cbind( tvec, rnorm(100,mean=0,sd=diff(tvec)) )
df
tvec = seq(0,100,by=1)
df = cbind( tvec, rnorm(100,mean=0,sd=diff(tvec)) )
tvec = seq(0,100,by=1)
df = cbind( tvec, rnorm(100,mean=0,sd=diff(tvec)) )
tvec = seq(0,100,by=1)
df = cbind( tvec, rnorm(100,mean=0,sd=diff(tvec)) )
df
head(df)
tvec = seq(0,100,by=1)
df = cbind( tvec, rnorm(length(tvec)+1,mean=0,sd=diff(tvec)) )
tvec = seq(0,100,by=1)
df = cbind( tvec, rnorm(length(tvec),mean=0,sd=diff(tvec)) )
df
head(df)
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
library(bslib)
# usethis::use_pkgdown()
devtools::document()
# pkgdown::clean_site()
pkgdown::build_site()
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_system(dx ~ sigma_x * dw)
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_system(dx ~ 0*dt + sigma_x * dw)
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ sigma_x * dw)
model
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = cbind( tvec, rnorm(length(tvec),mean=0,sd=diff(tvec)) )
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state()
head(df)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = cbind( tvec, y = rnorm(length(tvec),mean=0,sd=diff(tvec)) )
head(df)
df$y
# Create data.frame
df = cbind( t=tvec, y=rnorm(length(tvec),mean=0,sd=diff(tvec)) )
head(df)
# Create time vector
tvec = seq(0,100,by=1)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=diff(tvec)) )
head(df)
df$t
df$y
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
sd(df$y))
sd(df$y)
diff(Tvec)
diff(tvec)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
plot(df$t,df$y,col="red")
?ctsmrTMB
?ctsmrTMB::construct_nll
?ctsmrTMB:::construct_nll
?ctsmrTMB:construct_nll
?ctsmrTMB:construct_nll
?ctsmrTMB
?ctsmrTMB$new()$construct_nll
?ctsmrTMB$new()$construct_nll
?ctsmrTMB$new()construct_nll
?ctsmrTMB$new()$construct_nll
?'ctsmrTMB$new()'$construct_nll
model$construct_nll
?model$construct_nll
=?model$construct_nll()
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
model
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
fit = model$estimate(data=df, ode.timestep=1e-1)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
fit = model$estimate(data=df, ode.timestep=1e-1)
model
getwd()
knitr::opts_chunk$set(echo = TRUE)
print(getwd())
library(ctsmrTMB)
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
model$set_cppfile_directory("cppfiles")
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
model$set_cppfile_directory("cppfiles")
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
fit = model$estimate(data=df, ode.timestep=1e-1)
dirname(rstudioapi::documentPath())
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
model$set_cppfile_directory(dirname(rstudioapi::documentPath()))
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
model$set_cppfile_directory(dirname(rstudioapi::documentPath()))
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
fit = model$estimate(data=df, ode.timestep=1e-1)
# Set cpp file directory
current.path = dirname(rstudioapi::documentPath())
cppfile.folder = paste(current.path, "/cppfiles", sep="")
cppfile.folder
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
current.path = dirname(rstudioapi::documentPath())
cppfile.folder = paste(current.path, "/cppfiles", sep="")
model$set_cppfile_directory(dirname(rstudioapi::documentPath()))
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
current.path = dirname(rstudioapi::documentPath())
cppfile.folder = paste(current.path, "/cppfiles", sep="")
model$set_cppfile_directory(dirname(rstudioapi::documentPath()))
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
fit = model$estimate(data=df, ode.timestep=1e-1)
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
current.path = dirname(rstudioapi::documentPath())
cppfile.folder = paste(current.path, "/cppfiles", sep="")
model$set_cppfile_directory(dirname(rstudioapi::documentPath()))
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
fit = model$estimate(data=df, ode.timestep=1e-1)
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
current.path = dirname(rstudioapi::documentPath())
cpp.path = paste(current.path, "/cppfiles", sep="")
model$set_cppfile_directory(cpp.path)
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
model$.__enclos_env__$private$cppfile.directory
model$.__enclos_env__$private$cppfile.path
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
# current.path = dirname(rstudioapi::documentPath())
# cpp.path = paste(current.path, "/cppfiles", sep="")
# model$set_cppfile_directory(cpp.path)
model$set_cppfile_directory("cppfiles")
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
model$.__enclos_env__$private$cppfile.directory
model$.__enclos_env__$private$cppfile.path
model$.__enclos_env__$private$cppfile.path.with.method
getwd()
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
current.path = dirname(rstudioapi::documentPath())
cpp.path = paste(current.path, "/cppfiles", sep="")
model$set_cppfile_directory(cpp.path)
print(getwd())
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
knitr::opts_chunk$set(echo = TRUE)
library(ctsmrTMB)
# Create time vector
tvec = seq(0,100,by=1)
# Create data.frame
df = data.frame( t=tvec, y=rnorm(length(tvec),mean=0,sd=sqrt(diff(tvec))))
# Create model object
model = ctsmrTMB$new()
# Set model name
model$set_modelname("randomwalk_test")
# Set cpp file directory
current.path = dirname(rstudioapi::documentPath())
cpp.path = paste(current.path, "/cppfiles", sep="")
model$set_cppfile_directory(cpp.path)
print(getwd())
# Add system equations
model$add_systems(dx ~ 0 * dt + exp(logsigma_x) * dw)
# Add observation equation
model$add_observations(y ~ x)
# Specify observation variance
model$add_observation_variances(y ~ exp(logsigma_y^2))
model$add_parameters(
logsigma_x = log(c(init = 1, lower=1e-10, upper = 10)),
logsigma_y = log(c(init = 1, lower=1e-10, upper = 10))
)
model$set_initial_state(mean=0, cov=diag(1))
fit = model$estimate(data=df, ode.timestep=1e-1)
remotes::install_github(repo="phillipbvetter/ctsmrTMB", dependencies=TRUE)
