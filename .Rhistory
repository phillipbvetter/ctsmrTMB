knitr::opts_chunk$set(echo=FALSE,eval=FALSE)
knitr::opts_knit$set(root.dir = "~/phd/Kruger/R_damhus/article_work")
setwd("~/phd/Kruger/R_damhus/article_work")
rm(list=ls())
library(GGally) #for ggpairs
library(ggplot2)
library(ggcorrplot)
library(gganimate)
library(ggfortify)
library(gridExtra)
library(kableExtra)
library(latex2exp) #for latex in ggplot
library(tikzDevice) #for ggplot with latex math text
library(pracma)
library(bench) #for benchmarking of code
library(scales) #for transparent ggplot legend
library(dplyr)
library(zoo)
library(tidyquant)
library(tictoc)
library(TMB)
library(reshape2)
library(patchwork)
library(devtools)
library(Rcpp)
library(RcppEigen)
library(usethis)
library(Deriv)
library(stringr)
# remotes::install_github(repo="phillipbvetter/ctsmrTMB", dependencies=TRUE)
library(ctsmrTMB)
# Load SDE Package
# devtools::document("~/gitprojects/sdeproject/ctsmrTMB")
# devtools::load_all("~/gitprojects/sdeproject/ctsmrTMB")
# ggplot2 theme
mytheme =
theme_minimal() +
theme(
text = element_text("Avenir Next Condensed",size=15),
legend.text = element_text(size=15),
axis.text = element_text(size=15),
strip.text = element_text(face="bold",size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# plot.margin = unit(c(0,0.75,0,0), "cm"),
legend.box = "vertical",
legend.position = "top",
plot.title = element_text(hjust=0.5)
)
mytheme_bigfont =
theme_minimal() +
theme(
text = element_text("Avenir Next Condensed",size=25),
legend.text = element_text(size=25),
axis.text = element_text(size=25),
strip.text = element_text(face="bold",size=25),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# plot.margin = unit(c(0,0.75,0,0), "cm"),
legend.box = "vertical",
legend.position = "top",
plot.title = element_text(hjust=0.5)
)
mytheme_hugefont =
theme_minimal() +
theme(
text = element_text("Avenir Next Condensed",size=35),
legend.text = element_text(size=35),
axis.text = element_text(size=35),
strip.text = element_text(face="bold",size=35),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# plot.margin = unit(c(0,0.75,0,0), "cm"),
legend.box = "vertical",
legend.position = "top",
plot.title = element_text(hjust=0.5)
)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
# maindf = readRDS("Rdata/damhusdata_SBHfiltered_removed5cm_reduced10min.rds")
maindf = readRDS("../Rdata/damhusdata_SBHfiltered_removedbelow5cm_aggregated10min.rds")
# select clarifier
clar = "B"
no = 1
startdate = "2019-08-01"
enddate = "2019-08-30"
df = maindf %>% dplyr::filter(startdate <= date & date <= enddate) %>% dplyr::select(matches(c("timehours",sprintf("%s%s_Sbh",clar,no),sprintf("%s_Qin",clar),sprintf("%s_SS",clar),sprintf("%s_SSr",clar),sprintf("%s%s_QrSP",clar,no)))) %>% setNames(c("t","Sbh","Qf","Sf","Sr","Qr"))
startdate_sep = "2019-09-02"
enddate_sep = "2019-09-30"
df_sep = maindf %>% dplyr::filter(startdate_sep <= date & date <= enddate_sep) %>% dplyr::select(matches(c("timehours",sprintf("%s%s_Sbh",clar,no),sprintf("%s_Qin",clar),sprintf("%s_SS",clar),sprintf("%s_SSr",clar),sprintf("%s%s_QrSP",clar,no)))) %>% setNames(c("t","Sbh","Qf","Sf","Sr","Qr"))
# # # # # # #
startdate_march = "2020-03-01"
enddate_march = "2020-04-01"
df_march = maindf %>% dplyr::filter(startdate_march <= date & date <= enddate_march) %>% dplyr::select(matches(c("timehours",sprintf("%s%s_Sbh",clar,no),sprintf("%s_Qin",clar),sprintf("%s_SS",clar),sprintf("%s_SSr",clar),sprintf("%s%s_QrSP",clar,no)))) %>% setNames(c("t","Sbh","Qf","Sf","Sr","Qr"))
startdate_april = "2020-04-01"
enddate_april = "2020-05-01"
df_april = maindf %>% dplyr::filter(startdate_april <= date & date <= enddate_april) %>% dplyr::select(matches(c("timehours",sprintf("%s%s_Sbh",clar,no),sprintf("%s_Qin",clar),sprintf("%s_SS",clar),sprintf("%s_SSr",clar),sprintf("%s%s_QrSP",clar,no)))) %>% setNames(c("t","Sbh","Qf","Sf","Sr","Qr"))
# plot(df_sep$Sbh, type="l")
df1 = df
obj = ctsmrTMB$new()
obj$set_modelname("feb2023_model_normal_muLinear_noExp")
obj$set_cppfile_directory("/Users/pbrve/phd/Kruger/R_damhus/article_work/cppfiles")
obj$add_systems(dx ~ theta * (mu-x) * dt + sigma_x * dw)
obj$add_observations(Sbh ~ x)
obj$add_observation_variances(Sbh ~ sigma_y^2)
obj$add_algebraics(
theta ~ exp(logtheta),
mu ~ b0 + b1*Qf + b2*Sf + b3*Qf*Sf + b4*Qr,
sigma_x ~ exp(logsigma_x),
sigma_y ~ exp(logsigma_y)
)
obj$add_parameters(
logtheta ~ log(c( 1e-2, 1e-5, 1)),
b0 ~ c(0,-100,100),
b1 ~ c(0,-100,100),
b2 ~ c(0,-100,100),
b3 ~ c(0,-100,100),
b4 ~ c(0,-100,100),
logsigma_x ~ log(c(1e-2, 1e-10, 1)),
logsigma_y ~ log(c(5e-2, NA, NA))
)
obj$add_inputs(Sf,Qr,Qf)
x0 = median(df1$Sbh[1:5], na.rm=T)
p0 = 1e-1*diag(1)
obj$set_initial_state(mean=x0,cov=p0)
ode.timestep = 2e-1
fit = obj$estimate(df1,
ode.timestep=ode.timestep,
use.hessian=TRUE,
method="ekf",
compile=FALSE,
silence=FALSE
)
plot(fit, use.ggplot=T)
# Plot of Mu (mean height)
# plot(
#     fit$par.fixed["b0"] +
#       fit$par.fixed["b1"]*df1$Qf +
#       fit$par.fixed["b2"]*df1$Sf +
#       fit$par.fixed["b3"]*df1$Qf*df1$Sf +
#       fit$par.fixed["b4"]*df1$Qr,
#   type="l"
# )
# predict entire sep without update
# pred = predict(fit,
#                data = df_sepNA,
#                x0 = df_sep$Sbh[1],
#                p0 = 1e-1*diag(1),
#                give.only.n.step.ahead = F,
#                n.step.ahead = nrow(df_sep)-1,
#                ode.timestep = ode.timestep
# )
pred_1h = predict(fit,
data = df_sep,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = T,
n.step.ahead = 6,
ode.timestep = ode.timestep
)
pred_2h = predict(fit,
data = df_sep,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = T,
n.step.ahead = 12,
ode.timestep = ode.timestep
)
# predict entire sep without update
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
df_sepNA
# predict entire sep without update
df_sep
# predict entire sep without update
# df_sepNA = df_sep
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
# predict entire sep without update
df_sepNA = df_sep
df_sepNA$Sbh = NA
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
plot(pred$`t_{k+i}`,pred$x,type="l")
par(mfrow=c(1,1))
plot(pred$`t_{k+i}`,pred$x,type="l")
plot(df_sep$t,df_sep$Sbh,col="red",pch=16)
plot(pred$`t_{k+i}`,pred$x,type="l")
par(mfrow=c(1,1))
plot(df_sep$t,df_sep$Sbh,col="red",pch=16)
plot(df_sep$t,df_sep$Sbh,col="red",pch=16)
lines(pred$`t_{k+i}`,pred$x,type="l")
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
use.simulation = T,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
pred$simulations
pred$simulations %>% dim
pred$simulations$`t=1532.4`
pred$simulations$`t=1532.4` %>% dim
pred$simulations$`t=1532.4`$x
pred$simulations$`t=1532.4`$x$V2
pred$simulations$`t=1532.4`$x %>% dim
pred$simulations$`t=1532.4`$x %>% matplot(type="l")
matplot(t(pred$simulations$`t=1532.4`$x),type="l")
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
use.simulation = F,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
par(mfrow=c(1,1))
plot(df_sep$t,df_sep$Sbh,col="red",pch=16)
lines(pred$`t_{k+i}`,pred$x,type="l")
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
head(pred)
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
use.simulation = TRUE,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
str(pred)
head(pred$pred)
head(pred$simulations)
head(pred$simulations$`t=1532.4`$x)
df_sepNA$t %>% head
ode.timestep
head(pred$pred)
head(pred$simulations$`t=1532.4`$x)
2+2
df1 = df
obj = ctsmrTMB$new()
obj
obj$set_modelname("feb2023_model_normal_muLinear_noExp")
obj$set_cppfile_directory("/Users/pbrve/phd/Kruger/R_damhus/article_work/cppfiles")
obj$add_systems(dx ~ theta * (mu-x) * dt + sigma_x * dw)
obj$add_observations(Sbh ~ x)
obj$add_observation_variances(Sbh ~ sigma_y^2)
obj
obj$add_algebraics(
theta ~ exp(logtheta),
mu ~ b0 + b1*Qf + b2*Sf + b3*Qf*Sf + b4*Qr,
sigma_x ~ exp(logsigma_x),
sigma_y ~ exp(logsigma_y)
)
obj$add_parameters(
logtheta ~ log(c( 1e-2, 1e-5, 1)),
b0 ~ c(0,-100,100),
b1 ~ c(0,-100,100),
b2 ~ c(0,-100,100),
b3 ~ c(0,-100,100),
b4 ~ c(0,-100,100),
logsigma_x ~ log(c(1e-2, 1e-10, 1)),
logsigma_y ~ log(c(5e-2, NA, NA))
)
obj$add_inputs(Sf,Qr,Qf)
x0 = median(df1$Sbh[1:5], na.rm=T)
p0 = 1e-1*diag(1)
obj$set_initial_state(mean=x0,cov=p0)
fit = obj$estimate(df1,
ode.timestep=0.2,
use.hessian=TRUE,
method="ekf",
compile=FALSE,
silence=FALSE
)
fit = obj$estimate(df1,
ode.timestep=0.2,
use.hessian=FALSE,
method="ekf",
compile=FALSE,
silence=FALSE
)
fit = obj$estimate(df1,
ode.timestep=0.2,
use.hessian=TRUE,
method="ekf",
compile=FALSE,
silence=FALSE
)
fit$nll.value
fit$nll.gradient
fit$nll.hessian
fit$par.fixed
fit
plot(fit, use.ggplot=T)
plot(fit, use.ggplot=F)
# predict entire sep without update
df_sepNA = df_sep
df_sepNA$Sbh = NA
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = ode.timestep
)
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
# n.step.ahead = nrow(df_sep)-1,
n.step.ahead = 10,
ode.timestep = ode.timestep
)
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = T,
# n.step.ahead = nrow(df_sep)-1,
n.step.ahead = 10,
ode.timestep = ode.timestep
)
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
n.step.ahead = nrow(df_sep)-1,
# n.step.ahead = 10,
ode.timestep = ode.timestep
)
head(pred)
par(mfrow=c(1,1))
plot(df_sep$t,df_sep$Sbh,col="red",pch=16)
lines(pred$`t_{k+i}`,pred$x,type="l")
pred = predict(fit,
data = df_sepNA,
x0 = df_sep$Sbh[1],
p0 = 1e-1*diag(1),
give.only.n.step.ahead = F,
use.simulation = TRUE,
n.step.ahead = nrow(df_sep)-1,
ode.timestep = 0.2
)
head(pred$pred)
# pred$simulations$`t=1532.4`$x
matplot(t(pred$simulations$`t=1532.4`$x),type="l")
?rgenoud
install.packages("rgenoud")
?rgenoud
library(rgenoud)
?rgenoud
?genoud
# Install released version from CRAN
install.packages("pkgdown")
install.packages("pkgdown")
getwd()
setwd("~/github/ctsmrTMB")
getwd()
setwd("/Users/pbrve/github/ctsmrTMB")
setwd("/Users/pbrve/github/ctsmrTMB")
getwd()
library(pkgdown)
library(pkgdown)
library(devtools)
library(usethis)
pkgdown::build_site()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
pkgdown::build_site()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
pkgdown::build_site()
usethis::use_pkgdown()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
usethis::use_pkgdown()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
usethis::use_pkgdown()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
usethis::use_pkgdown()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
# usethis::use_pkgdown()
pkgdown::build_site()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
# usethis::use_pkgdown()
pkgdown::build_site()
warnings()
devtools::document()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
devtools::document()
# usethis::use_pkgdown()
pkgdown::build_site()
sessionInfo()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
devtools::document()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
devtools::document()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
devtools::document()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
devtools::document()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
devtools::document()
# usethis::use_pkgdown()
pkgdown::build_site()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
usethis::use_pkgdown()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
usethis::use_pkgdown()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
# usethis::use_pkgdown()
devtools::document()
pkgdown::build_site()
setwd("/Users/pbrve/github/ctsmrTMB")
library(pkgdown)
library(devtools)
library(usethis)
# usethis::use_pkgdown()
devtools::document()
pkgdown::build_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
install("bslib")
install.packages("bslib")
install.packages("bslib")
install.packages("bslib")
library(bslib)
install.packages("bslib")
library(bslib)
